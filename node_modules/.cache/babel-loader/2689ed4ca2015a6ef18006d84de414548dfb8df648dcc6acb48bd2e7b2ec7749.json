{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreya\\\\OneDrive\\\\Desktop\\\\IS\\\\Project\\\\login_with_otp\\\\client\\\\src\\\\pages\\\\Captcha.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst captchaContainerStyle = {\n  textAlign: 'center',\n  margin: '20px auto',\n  padding: '20px',\n  border: '1px solid #ccc',\n  borderRadius: '8px',\n  maxWidth: '400px',\n  minHeight: '400px',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'space-around'\n};\nconst captchaStyle = {\n  fontSize: '24px',\n  fontWeight: 'bold',\n  background: 'url(\"captcha-background.jpg\")',\n  // Replace with your background image URL\n  color: '#fff',\n  padding: '10px',\n  borderRadius: '5px'\n};\nconst validStyle = {\n  color: 'green'\n};\nconst invalidStyle = {\n  color: 'red'\n};\nconst userPicStyle = {\n  width: '100px',\n  height: '100px',\n  borderRadius: '50%',\n  border: '2px solid #000'\n};\nfunction Captcha() {\n  _s();\n  const [generatedCaptcha, setGeneratedCaptcha] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [isValid, setIsValid] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(60); // Set the time limit in seconds\n\n  useEffect(() => {\n    generateRandomCaptcha();\n  }, []); // Generate the CAPTCHA when the component mounts\n\n  const generateRandomCaptcha = () => {\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let captcha = '';\n    for (let i = 0; i < 6; i++) {\n      const randomIndex = Math.floor(Math.random() * characters.length);\n      captcha += characters.charAt(randomIndex);\n    }\n    setGeneratedCaptcha(captcha);\n    setIsValid(null); // Reset validation status\n    setTimeLeft(60); // Reset the timer\n  };\n\n  const handleUserInput = () => {\n    if (userInput === generatedCaptcha) {\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n  };\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (timeLeft > 0) {\n        setTimeLeft(timeLeft - 1);\n      } else {\n        generateRandomCaptcha(); // Reset the CAPTCHA when the timer expires\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: captchaContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Time-Based CAPTCHA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"user-pic.jpg\",\n        alt: \"User Pic\",\n        style: userPicStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateRandomCaptcha,\n      children: \"Generate CAPTCHA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"captcha\",\n      style: captchaStyle,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: isValid === true ? validStyle : isValid === false ? invalidStyle : {},\n        children: generatedCaptcha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter CAPTCHA\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUserInput,\n        children: \"Validate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [timeLeft, \" seconds remaining\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), isValid === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: validStyle,\n      children: \"CAPTCHA is valid!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 28\n    }, this), isValid === false && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: invalidStyle,\n      children: \"CAPTCHA is invalid.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Captcha, \"z24LNZgguFszjIfDLH1gRa0/5G0=\");\n_c = Captcha;\nexport default Captcha;\nvar _c;\n$RefreshReg$(_c, \"Captcha\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","captchaContainerStyle","textAlign","margin","padding","border","borderRadius","maxWidth","minHeight","display","flexDirection","alignItems","justifyContent","captchaStyle","fontSize","fontWeight","background","color","validStyle","invalidStyle","userPicStyle","width","height","Captcha","_s","generatedCaptcha","setGeneratedCaptcha","userInput","setUserInput","isValid","setIsValid","timeLeft","setTimeLeft","generateRandomCaptcha","characters","captcha","i","randomIndex","Math","floor","random","length","charAt","handleUserInput","timer","setInterval","clearInterval","style","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","className","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Shreya/OneDrive/Desktop/IS/Project/login_with_otp/client/src/pages/Captcha.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst captchaContainerStyle = {\r\n  textAlign: 'center',\r\n  margin: '20px auto',\r\n  padding: '20px',\r\n  border: '1px solid #ccc',\r\n  borderRadius: '8px',\r\n  maxWidth: '400px',\r\n  minHeight: '400px',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-around',\r\n};\r\n\r\nconst captchaStyle = {\r\n  fontSize: '24px',\r\n  fontWeight: 'bold',\r\n  background: 'url(\"captcha-background.jpg\")', // Replace with your background image URL\r\n  color: '#fff',\r\n  padding: '10px',\r\n  borderRadius: '5px',\r\n};\r\n\r\nconst validStyle = {\r\n  color: 'green',\r\n};\r\n\r\nconst invalidStyle = {\r\n  color: 'red',\r\n};\r\n\r\nconst userPicStyle = {\r\n  width: '100px',\r\n  height: '100px',\r\n  borderRadius: '50%',\r\n  border: '2px solid #000',\r\n};\r\n\r\nfunction Captcha() {\r\n  const [generatedCaptcha, setGeneratedCaptcha] = useState('');\r\n  const [userInput, setUserInput] = useState('');\r\n  const [isValid, setIsValid] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(60); // Set the time limit in seconds\r\n\r\n  useEffect(() => {\r\n    generateRandomCaptcha();\r\n  }, []); // Generate the CAPTCHA when the component mounts\r\n\r\n  const generateRandomCaptcha = () => {\r\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let captcha = '';\r\n    for (let i = 0; i < 6; i++) {\r\n      const randomIndex = Math.floor(Math.random() * characters.length);\r\n      captcha += characters.charAt(randomIndex);\r\n    }\r\n    setGeneratedCaptcha(captcha);\r\n    setIsValid(null); // Reset validation status\r\n    setTimeLeft(60); // Reset the timer\r\n  };\r\n\r\n  const handleUserInput = () => {\r\n    if (userInput === generatedCaptcha) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (timeLeft > 0) {\r\n        setTimeLeft(timeLeft - 1);\r\n      } else {\r\n        generateRandomCaptcha(); // Reset the CAPTCHA when the timer expires\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft]);\r\n\r\n  return (\r\n    <div style={captchaContainerStyle}>\r\n      <h2>Time-Based CAPTCHA</h2>\r\n      <div>\r\n        <img src=\"user-pic.jpg\" alt=\"User Pic\" style={userPicStyle} />\r\n      </div>\r\n      <button onClick={generateRandomCaptcha}>Generate CAPTCHA</button>\r\n      <div className=\"captcha\" style={captchaStyle}>\r\n        <span style={isValid === true ? validStyle : isValid === false ? invalidStyle : {}}>\r\n          {generatedCaptcha}\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter CAPTCHA\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n        />\r\n        <button onClick={handleUserInput}>Validate</button>\r\n      </div>\r\n      <p>{timeLeft} seconds remaining</p>\r\n      {isValid === true && <p style={validStyle}>CAPTCHA is valid!</p>}\r\n      {isValid === false && <p style={invalidStyle}>CAPTCHA is invalid.</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Captcha;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}